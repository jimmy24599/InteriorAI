"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/plan/page",{

/***/ "(app-pages-browser)/./services/geminiService.ts":
/*!***********************************!*\
  !*** ./services/geminiService.ts ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   analyzeHomePlan: () => (/* binding */ analyzeHomePlan),\n/* harmony export */   generateVideo: () => (/* binding */ generateVideo),\n/* harmony export */   redesignImage: () => (/* binding */ redesignImage)\n/* harmony export */ });\n/* harmony import */ var _google_genai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @google/genai */ \"(app-pages-browser)/./node_modules/@google/genai/dist/web/index.mjs\");\n/* harmony import */ var _utils_fileUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/fileUtils */ \"(app-pages-browser)/./utils/fileUtils.ts\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\n\n// Fix: Initialize the GoogleGenAI client according to guidelines.\nconst ai = new _google_genai__WEBPACK_IMPORTED_MODULE_0__.GoogleGenAI({\n    apiKey: process.env.NEXT_PUBLIC_GEMINI_API_KEY\n});\n/**\n * Redesigns an image based on a user's prompt.\n * Uses gemini-2.5-flash-image-preview for image editing.\n * @param imageFile The original image file.\n * @param prompt The user's description of the desired changes.\n * @returns A base64 encoded string of the generated image.\n */ const redesignImage = async (imageFile, prompt)=>{\n    // Fix: Convert file to base64 for the API request.\n    const base64ImageData = await (0,_utils_fileUtils__WEBPACK_IMPORTED_MODULE_1__.fileToBase64)(imageFile);\n    // Fix: Use generateContent with the image editing model.\n    const response = await ai.models.generateContent({\n        model: 'gemini-2.5-flash-image-preview',\n        contents: {\n            parts: [\n                {\n                    inlineData: {\n                        data: base64ImageData,\n                        mimeType: imageFile.type\n                    }\n                },\n                {\n                    text: \"Redesign this room with the following style: \".concat(prompt)\n                }\n            ]\n        },\n        config: {\n            // Fix: responseModalities must include both IMAGE and TEXT for this model.\n            responseModalities: [\n                _google_genai__WEBPACK_IMPORTED_MODULE_0__.Modality.IMAGE,\n                _google_genai__WEBPACK_IMPORTED_MODULE_0__.Modality.TEXT\n            ]\n        }\n    });\n    // Fix: Extract the generated image data from the response.\n    // The model can return both text and image, so we loop to find the image part.\n    for (const part of response.candidates[0].content.parts){\n        if (part.inlineData) {\n            return part.inlineData.data;\n        }\n    }\n    return null;\n};\n// Fix: Add missing generateVideo function to resolve import error.\n/**\n * Generates a video based on a text prompt and an optional image.\n * Uses veo-2.0-generate-001.\n * @param prompt The text prompt for video generation.\n * @param imageFile An optional initial image.\n * @param aspectRatio The desired aspect ratio of the video.\n * @param setProgressMessage A callback to update the UI with progress.\n * @returns A URL for the generated video, or null if it fails.\n */ const generateVideo = async (prompt, imageFile, aspectRatio, setProgressMessage)=>{\n    var _operation_response_generatedVideos__video, _operation_response_generatedVideos_, _operation_response_generatedVideos, _operation_response;\n    setProgressMessage('Preparing assets for video generation...');\n    const generateVideosParams = {\n        model: 'veo-2.0-generate-001',\n        prompt: \"\".concat(prompt, \" (aspect ratio: \").concat(aspectRatio, \")\"),\n        config: {\n            numberOfVideos: 1\n        }\n    };\n    if (imageFile) {\n        setProgressMessage('Encoding image for video generation...');\n        const base64ImageData = await (0,_utils_fileUtils__WEBPACK_IMPORTED_MODULE_1__.fileToBase64)(imageFile);\n        generateVideosParams.image = {\n            imageBytes: base64ImageData,\n            mimeType: imageFile.type\n        };\n    }\n    setProgressMessage('Sending request to video generation model...');\n    let operation = await ai.models.generateVideos(generateVideosParams);\n    setProgressMessage('Video generation in progress... This may take a few minutes.');\n    while(!operation.done){\n        await new Promise((resolve)=>setTimeout(resolve, 10000));\n        setProgressMessage('Checking video status...');\n        operation = await ai.operations.getVideosOperation({\n            operation: operation\n        });\n    }\n    const downloadLink = (_operation_response = operation.response) === null || _operation_response === void 0 ? void 0 : (_operation_response_generatedVideos = _operation_response.generatedVideos) === null || _operation_response_generatedVideos === void 0 ? void 0 : (_operation_response_generatedVideos_ = _operation_response_generatedVideos[0]) === null || _operation_response_generatedVideos_ === void 0 ? void 0 : (_operation_response_generatedVideos__video = _operation_response_generatedVideos_.video) === null || _operation_response_generatedVideos__video === void 0 ? void 0 : _operation_response_generatedVideos__video.uri;\n    if (!downloadLink) {\n        throw new Error('Video generation succeeded but no download link was found.');\n    }\n    setProgressMessage('Video generated! Downloading video data...');\n    // The response.body contains the MP4 bytes. You must append an API key when fetching from the download link.\n    const response = await fetch(\"\".concat(downloadLink, \"&key=\").concat(process.env.NEXT_PUBLIC_GEMINI_API_KEY));\n    if (!response.ok) {\n        throw new Error(\"Failed to download video: \".concat(response.statusText));\n    }\n    const videoBlob = await response.blob();\n    const videoUrl = URL.createObjectURL(videoBlob);\n    setProgressMessage('Video ready!');\n    return videoUrl;\n};\n/**\n * Analyzes a home floor plan image and extracts detailed information as JSON.\n * Uses gemini-2.5-flash.\n * @param imageFile The floor plan image.\n * @returns A JSON string with the detailed analysis.\n */ const analyzeHomePlan = async (imageFile)=>{\n    const base64ImageData = await (0,_utils_fileUtils__WEBPACK_IMPORTED_MODULE_1__.fileToBase64)(imageFile);\n    const schema = {\n        type: _google_genai__WEBPACK_IMPORTED_MODULE_0__.Type.OBJECT,\n        properties: {\n            rooms: {\n                type: _google_genai__WEBPACK_IMPORTED_MODULE_0__.Type.ARRAY,\n                description: \"List of all rooms and distinct spaces identified in the floor plan.\",\n                items: {\n                    type: _google_genai__WEBPACK_IMPORTED_MODULE_0__.Type.OBJECT,\n                    properties: {\n                        name: {\n                            type: _google_genai__WEBPACK_IMPORTED_MODULE_0__.Type.STRING,\n                            description: 'The name of the space (e.g., \"Living Room\", \"Master Bedroom\").'\n                        },\n                        dimensions: {\n                            type: _google_genai__WEBPACK_IMPORTED_MODULE_0__.Type.STRING,\n                            description: 'The exact dimensions of the room as written on the plan (e.g., \"12ft x 15ft\").'\n                        },\n                        features: {\n                            type: _google_genai__WEBPACK_IMPORTED_MODULE_0__.Type.ARRAY,\n                            description: \"A detailed list of all features within this space, including their precise locations.\",\n                            items: {\n                                type: _google_genai__WEBPACK_IMPORTED_MODULE_0__.Type.OBJECT,\n                                properties: {\n                                    name: {\n                                        type: _google_genai__WEBPACK_IMPORTED_MODULE_0__.Type.STRING,\n                                        description: \"The name of the feature (e.g., 'Window', 'Door', 'Sink', 'Sofa').\"\n                                    },\n                                    position: {\n                                        type: _google_genai__WEBPACK_IMPORTED_MODULE_0__.Type.STRING,\n                                        description: \"The precise location of the feature (e.g., 'Centered on the north wall', 'In the southeast corner', 'Left of the main entrance').\"\n                                    }\n                                },\n                                required: [\n                                    'name',\n                                    'position'\n                                ]\n                            }\n                        }\n                    },\n                    required: [\n                        'name',\n                        'dimensions',\n                        'features'\n                    ]\n                }\n            }\n        },\n        required: [\n            'rooms'\n        ]\n    };\n    const response = await ai.models.generateContent({\n        model: 'gemini-2.5-flash',\n        contents: {\n            parts: [\n                {\n                    inlineData: {\n                        data: base64ImageData,\n                        mimeType: imageFile.type\n                    }\n                },\n                {\n                    text: \"Analyze the provided floor plan image.\"\n                }\n            ]\n        },\n        config: {\n            systemInstruction: 'You are an expert architectural plan analyst. Your task is to meticulously analyze the user\\'s floor plan image. \\n      1. Identify every distinct room and space (e.g., Living Room, Bedroom, Bathroom, Car Port, Closet).\\n      2. For each space, extract its exact dimensions as written on the plan.\\n      3. For each space, identify all key features like doors, windows, and major fixtures (sinks, toilets, showers, sofas, etc.). For every feature, you MUST describe its precise location within the space (e.g., \"Centered on the north wall\", \"In the southeast corner\").\\n      4. Return your complete analysis as a single JSON object that strictly adheres to the provided schema. Do not omit any required fields.',\n            responseMimeType: \"application/json\",\n            responseSchema: schema\n        }\n    });\n    return response.text;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NlcnZpY2VzL2dlbWluaVNlcnZpY2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTREO0FBQ1Y7QUFFbEQsa0VBQWtFO0FBQ2xFLE1BQU1JLEtBQUssSUFBSUosc0RBQVdBLENBQUM7SUFBRUssUUFBUUMsT0FBT0EsQ0FBQ0MsR0FBRyxDQUFDQywwQkFBMEI7QUFBQztBQUU1RTs7Ozs7O0NBTUMsR0FDTSxNQUFNQyxnQkFBZ0IsT0FBT0MsV0FBaUJDO0lBQ25ELG1EQUFtRDtJQUNuRCxNQUFNQyxrQkFBa0IsTUFBTVQsOERBQVlBLENBQUNPO0lBRTNDLHlEQUF5RDtJQUN6RCxNQUFNRyxXQUFXLE1BQU1ULEdBQUdVLE1BQU0sQ0FBQ0MsZUFBZSxDQUFDO1FBQy9DQyxPQUFPO1FBQ1BDLFVBQVU7WUFDUkMsT0FBTztnQkFDTDtvQkFDRUMsWUFBWTt3QkFDVkMsTUFBTVI7d0JBQ05TLFVBQVVYLFVBQVVZLElBQUk7b0JBQzFCO2dCQUNGO2dCQUNBO29CQUNFQyxNQUFNLGdEQUF1RCxPQUFQWjtnQkFDeEQ7YUFDRDtRQUNIO1FBQ0FhLFFBQVE7WUFDTiwyRUFBMkU7WUFDM0VDLG9CQUFvQjtnQkFBQ3hCLG1EQUFRQSxDQUFDeUIsS0FBSztnQkFBRXpCLG1EQUFRQSxDQUFDMEIsSUFBSTthQUFDO1FBQ3JEO0lBQ0Y7SUFFQSwyREFBMkQ7SUFDM0QsK0VBQStFO0lBQy9FLEtBQUssTUFBTUMsUUFBUWYsU0FBU2dCLFVBQVUsQ0FBQyxFQUFFLENBQUNDLE9BQU8sQ0FBQ1osS0FBSyxDQUFFO1FBQ3ZELElBQUlVLEtBQUtULFVBQVUsRUFBRTtZQUNuQixPQUFPUyxLQUFLVCxVQUFVLENBQUNDLElBQUk7UUFDN0I7SUFDRjtJQUVBLE9BQU87QUFDVCxFQUFFO0FBRUYsbUVBQW1FO0FBQ25FOzs7Ozs7OztDQVFDLEdBQ00sTUFBTVcsZ0JBQWdCLE9BQzNCcEIsUUFDQUQsV0FDQXNCLGFBQ0FDO1FBZ0NxQkMsNENBQUFBLHNDQUFB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Z0JBQzlDO1lBQ0Y7UUFDRjtRQUNBQSxVQUFVO1lBQUM7U0FBUTtJQUNyQjtJQUVBLE1BQU0zRCxXQUFXLE1BQU1ULEdBQUdVLE1BQU0sQ0FBQ0MsZUFBZSxDQUFDO1FBQy9DQyxPQUFPO1FBQ1BDLFVBQVU7WUFDUkMsT0FBTztnQkFDTDtvQkFBRUMsWUFBWTt3QkFBRUMsTUFBTVI7d0JBQWlCUyxVQUFVWCxVQUFVWSxJQUFJO29CQUFDO2dCQUFFO2dCQUNsRTtvQkFBRUMsTUFBTTtnQkFBeUM7YUFDbEQ7UUFDSDtRQUNBQyxRQUFRO1lBQ05pRCxtQkFBb0I7WUFLcEJDLGtCQUFrQjtZQUNsQkMsZ0JBQWdCZjtRQUNsQjtJQUNGO0lBRUEsT0FBTy9DLFNBQVNVLElBQUk7QUFDdEIsRUFBRSIsInNvdXJjZXMiOlsiL1VzZXJzL2FobWVkL0Rlc2t0b3AvQVBQUy9pbnRlcmlvci1haS1kZXNpZ25lci9zZXJ2aWNlcy9nZW1pbmlTZXJ2aWNlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdvb2dsZUdlbkFJLCBNb2RhbGl0eSwgVHlwZSB9IGZyb20gXCJAZ29vZ2xlL2dlbmFpXCI7XG5pbXBvcnQgeyBmaWxlVG9CYXNlNjQgfSBmcm9tIFwiLi4vdXRpbHMvZmlsZVV0aWxzXCI7XG5cbi8vIEZpeDogSW5pdGlhbGl6ZSB0aGUgR29vZ2xlR2VuQUkgY2xpZW50IGFjY29yZGluZyB0byBndWlkZWxpbmVzLlxuY29uc3QgYWkgPSBuZXcgR29vZ2xlR2VuQUkoeyBhcGlLZXk6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0dFTUlOSV9BUElfS0VZIH0pO1xuXG4vKipcbiAqIFJlZGVzaWducyBhbiBpbWFnZSBiYXNlZCBvbiBhIHVzZXIncyBwcm9tcHQuXG4gKiBVc2VzIGdlbWluaS0yLjUtZmxhc2gtaW1hZ2UtcHJldmlldyBmb3IgaW1hZ2UgZWRpdGluZy5cbiAqIEBwYXJhbSBpbWFnZUZpbGUgVGhlIG9yaWdpbmFsIGltYWdlIGZpbGUuXG4gKiBAcGFyYW0gcHJvbXB0IFRoZSB1c2VyJ3MgZGVzY3JpcHRpb24gb2YgdGhlIGRlc2lyZWQgY2hhbmdlcy5cbiAqIEByZXR1cm5zIEEgYmFzZTY0IGVuY29kZWQgc3RyaW5nIG9mIHRoZSBnZW5lcmF0ZWQgaW1hZ2UuXG4gKi9cbmV4cG9ydCBjb25zdCByZWRlc2lnbkltYWdlID0gYXN5bmMgKGltYWdlRmlsZTogRmlsZSwgcHJvbXB0OiBzdHJpbmcpOiBQcm9taXNlPHN0cmluZyB8IG51bGw+ID0+IHtcbiAgLy8gRml4OiBDb252ZXJ0IGZpbGUgdG8gYmFzZTY0IGZvciB0aGUgQVBJIHJlcXVlc3QuXG4gIGNvbnN0IGJhc2U2NEltYWdlRGF0YSA9IGF3YWl0IGZpbGVUb0Jhc2U2NChpbWFnZUZpbGUpO1xuXG4gIC8vIEZpeDogVXNlIGdlbmVyYXRlQ29udGVudCB3aXRoIHRoZSBpbWFnZSBlZGl0aW5nIG1vZGVsLlxuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGFpLm1vZGVscy5nZW5lcmF0ZUNvbnRlbnQoe1xuICAgIG1vZGVsOiAnZ2VtaW5pLTIuNS1mbGFzaC1pbWFnZS1wcmV2aWV3JyxcbiAgICBjb250ZW50czoge1xuICAgICAgcGFydHM6IFtcbiAgICAgICAge1xuICAgICAgICAgIGlubGluZURhdGE6IHtcbiAgICAgICAgICAgIGRhdGE6IGJhc2U2NEltYWdlRGF0YSxcbiAgICAgICAgICAgIG1pbWVUeXBlOiBpbWFnZUZpbGUudHlwZSxcbiAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgdGV4dDogYFJlZGVzaWduIHRoaXMgcm9vbSB3aXRoIHRoZSBmb2xsb3dpbmcgc3R5bGU6ICR7cHJvbXB0fWAsXG4gICAgICAgIH0sXG4gICAgICBdLFxuICAgIH0sXG4gICAgY29uZmlnOiB7XG4gICAgICAvLyBGaXg6IHJlc3BvbnNlTW9kYWxpdGllcyBtdXN0IGluY2x1ZGUgYm90aCBJTUFHRSBhbmQgVEVYVCBmb3IgdGhpcyBtb2RlbC5cbiAgICAgIHJlc3BvbnNlTW9kYWxpdGllczogW01vZGFsaXR5LklNQUdFLCBNb2RhbGl0eS5URVhUXSxcbiAgICB9LFxuICB9KTtcblxuICAvLyBGaXg6IEV4dHJhY3QgdGhlIGdlbmVyYXRlZCBpbWFnZSBkYXRhIGZyb20gdGhlIHJlc3BvbnNlLlxuICAvLyBUaGUgbW9kZWwgY2FuIHJldHVybiBib3RoIHRleHQgYW5kIGltYWdlLCBzbyB3ZSBsb29wIHRvIGZpbmQgdGhlIGltYWdlIHBhcnQuXG4gIGZvciAoY29uc3QgcGFydCBvZiByZXNwb25zZS5jYW5kaWRhdGVzWzBdLmNvbnRlbnQucGFydHMpIHtcbiAgICBpZiAocGFydC5pbmxpbmVEYXRhKSB7XG4gICAgICByZXR1cm4gcGFydC5pbmxpbmVEYXRhLmRhdGE7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG51bGw7XG59O1xuXG4vLyBGaXg6IEFkZCBtaXNzaW5nIGdlbmVyYXRlVmlkZW8gZnVuY3Rpb24gdG8gcmVzb2x2ZSBpbXBvcnQgZXJyb3IuXG4vKipcbiAqIEdlbmVyYXRlcyBhIHZpZGVvIGJhc2VkIG9uIGEgdGV4dCBwcm9tcHQgYW5kIGFuIG9wdGlvbmFsIGltYWdlLlxuICogVXNlcyB2ZW8tMi4wLWdlbmVyYXRlLTAwMS5cbiAqIEBwYXJhbSBwcm9tcHQgVGhlIHRleHQgcHJvbXB0IGZvciB2aWRlbyBnZW5lcmF0aW9uLlxuICogQHBhcmFtIGltYWdlRmlsZSBBbiBvcHRpb25hbCBpbml0aWFsIGltYWdlLlxuICogQHBhcmFtIGFzcGVjdFJhdGlvIFRoZSBkZXNpcmVkIGFzcGVjdCByYXRpbyBvZiB0aGUgdmlkZW8uXG4gKiBAcGFyYW0gc2V0UHJvZ3Jlc3NNZXNzYWdlIEEgY2FsbGJhY2sgdG8gdXBkYXRlIHRoZSBVSSB3aXRoIHByb2dyZXNzLlxuICogQHJldHVybnMgQSBVUkwgZm9yIHRoZSBnZW5lcmF0ZWQgdmlkZW8sIG9yIG51bGwgaWYgaXQgZmFpbHMuXG4gKi9cbmV4cG9ydCBjb25zdCBnZW5lcmF0ZVZpZGVvID0gYXN5bmMgKFxuICBwcm9tcHQ6IHN0cmluZyxcbiAgaW1hZ2VGaWxlOiBGaWxlIHwgbnVsbCxcbiAgYXNwZWN0UmF0aW86IHN0cmluZyxcbiAgc2V0UHJvZ3Jlc3NNZXNzYWdlOiAobWVzc2FnZTogc3RyaW5nKSA9PiB2b2lkXG4pOiBQcm9taXNlPHN0cmluZyB8IG51bGw+ID0+IHtcbiAgc2V0UHJvZ3Jlc3NNZXNzYWdlKCdQcmVwYXJpbmcgYXNzZXRzIGZvciB2aWRlbyBnZW5lcmF0aW9uLi4uJyk7XG5cbiAgY29uc3QgZ2VuZXJhdGVWaWRlb3NQYXJhbXM6IGFueSA9IHtcbiAgICBtb2RlbDogJ3Zlby0yLjAtZ2VuZXJhdGUtMDAxJyxcbiAgICBwcm9tcHQ6IGAke3Byb21wdH0gKGFzcGVjdCByYXRpbzogJHthc3BlY3RSYXRpb30pYCxcbiAgICBjb25maWc6IHtcbiAgICAgIG51bWJlck9mVmlkZW9zOiAxLFxuICAgIH0sXG4gIH07XG5cbiAgaWYgKGltYWdlRmlsZSkge1xuICAgIHNldFByb2dyZXNzTWVzc2FnZSgnRW5jb2RpbmcgaW1hZ2UgZm9yIHZpZGVvIGdlbmVyYXRpb24uLi4nKTtcbiAgICBjb25zdCBiYXNlNjRJbWFnZURhdGEgPSBhd2FpdCBmaWxlVG9CYXNlNjQoaW1hZ2VGaWxlKTtcbiAgICBnZW5lcmF0ZVZpZGVvc1BhcmFtcy5pbWFnZSA9IHtcbiAgICAgIGltYWdlQnl0ZXM6IGJhc2U2NEltYWdlRGF0YSxcbiAgICAgIG1pbWVUeXBlOiBpbWFnZUZpbGUudHlwZSxcbiAgICB9O1xuICB9XG5cbiAgc2V0UHJvZ3Jlc3NNZXNzYWdlKCdTZW5kaW5nIHJlcXVlc3QgdG8gdmlkZW8gZ2VuZXJhdGlvbiBtb2RlbC4uLicpO1xuICBsZXQgb3BlcmF0aW9uID0gYXdhaXQgYWkubW9kZWxzLmdlbmVyYXRlVmlkZW9zKGdlbmVyYXRlVmlkZW9zUGFyYW1zKTtcbiAgXG4gIHNldFByb2dyZXNzTWVzc2FnZSgnVmlkZW8gZ2VuZXJhdGlvbiBpbiBwcm9ncmVzcy4uLiBUaGlzIG1heSB0YWtlIGEgZmV3IG1pbnV0ZXMuJyk7XG4gIFxuICB3aGlsZSAoIW9wZXJhdGlvbi5kb25lKSB7XG4gICAgYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDEwMDAwKSk7XG4gICAgc2V0UHJvZ3Jlc3NNZXNzYWdlKCdDaGVja2luZyB2aWRlbyBzdGF0dXMuLi4nKTtcbiAgICBvcGVyYXRpb24gPSBhd2FpdCBhaS5vcGVyYXRpb25zLmdldFZpZGVvc09wZXJhdGlvbih7IG9wZXJhdGlvbjogb3BlcmF0aW9uIH0pO1xuICB9XG5cbiAgY29uc3QgZG93bmxvYWRMaW5rID0gb3BlcmF0aW9uLnJlc3BvbnNlPy5nZW5lcmF0ZWRWaWRlb3M/LlswXT8udmlkZW8/LnVyaTtcblxuICBpZiAoIWRvd25sb2FkTGluaykge1xuICAgIHRocm93IG5ldyBFcnJvcignVmlkZW8gZ2VuZXJhdGlvbiBzdWNjZWVkZWQgYnV0IG5vIGRvd25sb2FkIGxpbmsgd2FzIGZvdW5kLicpO1xuICB9XG5cbiAgc2V0UHJvZ3Jlc3NNZXNzYWdlKCdWaWRlbyBnZW5lcmF0ZWQhIERvd25sb2FkaW5nIHZpZGVvIGRhdGEuLi4nKTtcbiAgLy8gVGhlIHJlc3BvbnNlLmJvZHkgY29udGFpbnMgdGhlIE1QNCBieXRlcy4gWW91IG11c3QgYXBwZW5kIGFuIEFQSSBrZXkgd2hlbiBmZXRjaGluZyBmcm9tIHRoZSBkb3dubG9hZCBsaW5rLlxuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAke2Rvd25sb2FkTGlua30ma2V5PSR7cHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfR0VNSU5JX0FQSV9LRVl9YCk7XG4gIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byBkb3dubG9hZCB2aWRlbzogJHtyZXNwb25zZS5zdGF0dXNUZXh0fWApO1xuICB9XG5cbiAgY29uc3QgdmlkZW9CbG9iID0gYXdhaXQgcmVzcG9uc2UuYmxvYigpO1xuICBjb25zdCB2aWRlb1VybCA9IFVSTC5jcmVhdGVPYmplY3RVUkwodmlkZW9CbG9iKTtcbiAgXG4gIHNldFByb2dyZXNzTWVzc2FnZSgnVmlkZW8gcmVhZHkhJyk7XG4gIHJldHVybiB2aWRlb1VybDtcbn07XG5cbi8qKlxuICogQW5hbHl6ZXMgYSBob21lIGZsb29yIHBsYW4gaW1hZ2UgYW5kIGV4dHJhY3RzIGRldGFpbGVkIGluZm9ybWF0aW9uIGFzIEpTT04uXG4gKiBVc2VzIGdlbWluaS0yLjUtZmxhc2guXG4gKiBAcGFyYW0gaW1hZ2VGaWxlIFRoZSBmbG9vciBwbGFuIGltYWdlLlxuICogQHJldHVybnMgQSBKU09OIHN0cmluZyB3aXRoIHRoZSBkZXRhaWxlZCBhbmFseXNpcy5cbiAqL1xuZXhwb3J0IGNvbnN0IGFuYWx5emVIb21lUGxhbiA9IGFzeW5jIChpbWFnZUZpbGU6IEZpbGUpOiBQcm9taXNlPHN0cmluZyB8IG51bGw+ID0+IHtcbiAgY29uc3QgYmFzZTY0SW1hZ2VEYXRhID0gYXdhaXQgZmlsZVRvQmFzZTY0KGltYWdlRmlsZSk7XG5cbiAgY29uc3Qgc2NoZW1hID0ge1xuICAgIHR5cGU6IFR5cGUuT0JKRUNULFxuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIHJvb21zOiB7XG4gICAgICAgIHR5cGU6IFR5cGUuQVJSQVksXG4gICAgICAgIGRlc2NyaXB0aW9uOiBcIkxpc3Qgb2YgYWxsIHJvb21zIGFuZCBkaXN0aW5jdCBzcGFjZXMgaWRlbnRpZmllZCBpbiB0aGUgZmxvb3IgcGxhbi5cIixcbiAgICAgICAgaXRlbXM6IHtcbiAgICAgICAgICB0eXBlOiBUeXBlLk9CSkVDVCxcbiAgICAgICAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICAgICAgICBuYW1lOiB7XG4gICAgICAgICAgICAgIHR5cGU6IFR5cGUuU1RSSU5HLFxuICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogJ1RoZSBuYW1lIG9mIHRoZSBzcGFjZSAoZS5nLiwgXCJMaXZpbmcgUm9vbVwiLCBcIk1hc3RlciBCZWRyb29tXCIpLicsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZGltZW5zaW9uczoge1xuICAgICAgICAgICAgICB0eXBlOiBUeXBlLlNUUklORyxcbiAgICAgICAgICAgICAgZGVzY3JpcHRpb246ICdUaGUgZXhhY3QgZGltZW5zaW9ucyBvZiB0aGUgcm9vbSBhcyB3cml0dGVuIG9uIHRoZSBwbGFuIChlLmcuLCBcIjEyZnQgeCAxNWZ0XCIpLicsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZmVhdHVyZXM6IHtcbiAgICAgICAgICAgICAgdHlwZTogVHlwZS5BUlJBWSxcbiAgICAgICAgICAgICAgZGVzY3JpcHRpb246IFwiQSBkZXRhaWxlZCBsaXN0IG9mIGFsbCBmZWF0dXJlcyB3aXRoaW4gdGhpcyBzcGFjZSwgaW5jbHVkaW5nIHRoZWlyIHByZWNpc2UgbG9jYXRpb25zLlwiLFxuICAgICAgICAgICAgICBpdGVtczoge1xuICAgICAgICAgICAgICAgIHR5cGU6IFR5cGUuT0JKRUNULFxuICAgICAgICAgICAgICAgIHByb3BlcnRpZXM6IHtcbiAgICAgICAgICAgICAgICAgIG5hbWU6IHsgdHlwZTogVHlwZS5TVFJJTkcsIGRlc2NyaXB0aW9uOiBcIlRoZSBuYW1lIG9mIHRoZSBmZWF0dXJlIChlLmcuLCAnV2luZG93JywgJ0Rvb3InLCAnU2luaycsICdTb2ZhJykuXCIgfSxcbiAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiB7IHR5cGU6IFR5cGUuU1RSSU5HLCBkZXNjcmlwdGlvbjogXCJUaGUgcHJlY2lzZSBsb2NhdGlvbiBvZiB0aGUgZmVhdHVyZSAoZS5nLiwgJ0NlbnRlcmVkIG9uIHRoZSBub3J0aCB3YWxsJywgJ0luIHRoZSBzb3V0aGVhc3QgY29ybmVyJywgJ0xlZnQgb2YgdGhlIG1haW4gZW50cmFuY2UnKS5cIiB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICByZXF1aXJlZDogWyduYW1lJywgJ3Bvc2l0aW9uJ11cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfSxcbiAgICAgICAgICByZXF1aXJlZDogWyduYW1lJywgJ2RpbWVuc2lvbnMnLCAnZmVhdHVyZXMnXSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfSxcbiAgICByZXF1aXJlZDogWydyb29tcyddLFxuICB9O1xuXG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYWkubW9kZWxzLmdlbmVyYXRlQ29udGVudCh7XG4gICAgbW9kZWw6ICdnZW1pbmktMi41LWZsYXNoJyxcbiAgICBjb250ZW50czoge1xuICAgICAgcGFydHM6IFtcbiAgICAgICAgeyBpbmxpbmVEYXRhOiB7IGRhdGE6IGJhc2U2NEltYWdlRGF0YSwgbWltZVR5cGU6IGltYWdlRmlsZS50eXBlIH0gfSxcbiAgICAgICAgeyB0ZXh0OiBcIkFuYWx5emUgdGhlIHByb3ZpZGVkIGZsb29yIHBsYW4gaW1hZ2UuXCIgfSxcbiAgICAgIF0sXG4gICAgfSxcbiAgICBjb25maWc6IHtcbiAgICAgIHN5c3RlbUluc3RydWN0aW9uOiBgWW91IGFyZSBhbiBleHBlcnQgYXJjaGl0ZWN0dXJhbCBwbGFuIGFuYWx5c3QuIFlvdXIgdGFzayBpcyB0byBtZXRpY3Vsb3VzbHkgYW5hbHl6ZSB0aGUgdXNlcidzIGZsb29yIHBsYW4gaW1hZ2UuIFxuICAgICAgMS4gSWRlbnRpZnkgZXZlcnkgZGlzdGluY3Qgcm9vbSBhbmQgc3BhY2UgKGUuZy4sIExpdmluZyBSb29tLCBCZWRyb29tLCBCYXRocm9vbSwgQ2FyIFBvcnQsIENsb3NldCkuXG4gICAgICAyLiBGb3IgZWFjaCBzcGFjZSwgZXh0cmFjdCBpdHMgZXhhY3QgZGltZW5zaW9ucyBhcyB3cml0dGVuIG9uIHRoZSBwbGFuLlxuICAgICAgMy4gRm9yIGVhY2ggc3BhY2UsIGlkZW50aWZ5IGFsbCBrZXkgZmVhdHVyZXMgbGlrZSBkb29ycywgd2luZG93cywgYW5kIG1ham9yIGZpeHR1cmVzIChzaW5rcywgdG9pbGV0cywgc2hvd2Vycywgc29mYXMsIGV0Yy4pLiBGb3IgZXZlcnkgZmVhdHVyZSwgeW91IE1VU1QgZGVzY3JpYmUgaXRzIHByZWNpc2UgbG9jYXRpb24gd2l0aGluIHRoZSBzcGFjZSAoZS5nLiwgXCJDZW50ZXJlZCBvbiB0aGUgbm9ydGggd2FsbFwiLCBcIkluIHRoZSBzb3V0aGVhc3QgY29ybmVyXCIpLlxuICAgICAgNC4gUmV0dXJuIHlvdXIgY29tcGxldGUgYW5hbHlzaXMgYXMgYSBzaW5nbGUgSlNPTiBvYmplY3QgdGhhdCBzdHJpY3RseSBhZGhlcmVzIHRvIHRoZSBwcm92aWRlZCBzY2hlbWEuIERvIG5vdCBvbWl0IGFueSByZXF1aXJlZCBmaWVsZHMuYCxcbiAgICAgIHJlc3BvbnNlTWltZVR5cGU6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgcmVzcG9uc2VTY2hlbWE6IHNjaGVtYSxcbiAgICB9LFxuICB9KTtcblxuICByZXR1cm4gcmVzcG9uc2UudGV4dDtcbn07Il0sIm5hbWVzIjpbIkdvb2dsZUdlbkFJIiwiTW9kYWxpdHkiLCJUeXBlIiwiZmlsZVRvQmFzZTY0IiwiYWkiLCJhcGlLZXkiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfR0VNSU5JX0FQSV9LRVkiLCJyZWRlc2lnbkltYWdlIiwiaW1hZ2VGaWxlIiwicHJvbXB0IiwiYmFzZTY0SW1hZ2VEYXRhIiwicmVzcG9uc2UiLCJtb2RlbHMiLCJnZW5lcmF0ZUNvbnRlbnQiLCJtb2RlbCIsImNvbnRlbnRzIiwicGFydHMiLCJpbmxpbmVEYXRhIiwiZGF0YSIsIm1pbWVUeXBlIiwidHlwZSIsInRleHQiLCJjb25maWciLCJyZXNwb25zZU1vZGFsaXRpZXMiLCJJTUFHRSIsIlRFWFQiLCJwYXJ0IiwiY2FuZGlkYXRlcyIsImNvbnRlbnQiLCJnZW5lcmF0ZVZpZGVvIiwiYXNwZWN0UmF0aW8iLCJzZXRQcm9ncmVzc01lc3NhZ2UiLCJvcGVyYXRpb24iLCJnZW5lcmF0ZVZpZGVvc1BhcmFtcyIsIm51bWJlck9mVmlkZW9zIiwiaW1hZ2UiLCJpbWFnZUJ5dGVzIiwiZ2VuZXJhdGVWaWRlb3MiLCJkb25lIiwiUHJvbWlzZSIsInJlc29sdmUiLCJzZXRUaW1lb3V0Iiwib3BlcmF0aW9ucyIsImdldFZpZGVvc09wZXJhdGlvbiIsImRvd25sb2FkTGluayIsImdlbmVyYXRlZFZpZGVvcyIsInZpZGVvIiwidXJpIiwiRXJyb3IiLCJmZXRjaCIsIm9rIiwic3RhdHVzVGV4dCIsInZpZGVvQmxvYiIsImJsb2IiLCJ2aWRlb1VybCIsIlVSTCIsImNyZWF0ZU9iamVjdFVSTCIsImFuYWx5emVIb21lUGxhbiIsInNjaGVtYSIsIk9CSkVDVCIsInByb3BlcnRpZXMiLCJyb29tcyIsIkFSUkFZIiwiZGVzY3JpcHRpb24iLCJpdGVtcyIsIm5hbWUiLCJTVFJJTkciLCJkaW1lbnNpb25zIiwiZmVhdHVyZXMiLCJwb3NpdGlvbiIsInJlcXVpcmVkIiwic3lzdGVtSW5zdHJ1Y3Rpb24iLCJyZXNwb25zZU1pbWVUeXBlIiwicmVzcG9uc2VTY2hlbWEiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./services/geminiService.ts\n"));

/***/ })

});